{"version":3,"sources":["App.js","index.js"],"names":["App","console","clear","useState","sourceText","setSourceText","isVisibleError","setIsVisibleError","NodeRSA","b","key","className","value","exportKey","disabled","type","onChange","target","decrypt","e","encrypt","style","display","justifyContent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSAiEeA,MA5Df,WACEC,QAAQC,QADK,MAGuBC,mBAAS,IAHhC,mBAGNC,EAHM,KAGMC,EAHN,OAI+BF,oBAAS,GAJxC,mBAING,EAJM,KAIUC,EAJV,OAKSJ,mBAAS,IAAIK,IAAQ,CAAEC,EAAG,OALnC,mBAKNC,EALM,KAoBb,OApBa,KAqBX,yBAAKC,UAAU,OACb,6BACE,yBAAKA,UAAU,gBACb,iHACA,8BACEA,UAAU,UACVC,MAAOF,EAAIG,UAAU,WACrBC,UAAQ,KAGZ,yBAAKH,UAAU,gBACb,iHACA,8BACEA,UAAU,SACVC,MAAOF,EAAIG,UAAU,UACrBC,UAAQ,KAGZ,yBAAKH,UAAU,SACb,+IACA,2BAAOI,KAAK,OAAOC,SAlCA,SAAC,GAA2B,IAAfJ,EAAc,EAAxBK,OAAUL,MACtCP,EAAcO,IAiCyCA,MAAOR,KAE1D,yBAAKO,UAAU,SACb,yIACA,8BACEK,SAnCiB,SAAC,GAA2B,IAAfJ,EAAc,EAAxBK,OAAUL,MACtC,IACEP,EAAcK,EAAIQ,QAAQN,EAAO,SACjCL,GAAkB,GAClB,MAAOY,GACPZ,GAAkB,KA+BZK,MAAOF,EAAIU,QAAQhB,EAAY,aAGlCE,EACC,yBAAKe,MAAO,CAAEC,QAAS,OAAQC,eAAgB,WAC7C,2HAEA,QCtDZC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.2eaeb9c2.chunk.js","sourcesContent":["/* eslint-disable no-extend-native */\r\nimport React, { useState } from 'react';\r\nimport NodeRSA from 'node-rsa';\r\nimport './App.scss';\r\n\r\nfunction App() {\r\n  console.clear();\r\n\r\n  const [sourceText, setSourceText] = useState('');\r\n  const [isVisibleError, setIsVisibleError] = useState(false);\r\n  const [key, setKey] = useState(new NodeRSA({ b: 512 }));\r\n\r\n  const handleDecryptInput = ({ target: { value } }) => {\r\n    setSourceText(value);\r\n  };\r\n\r\n  const handleEncryptInput = ({ target: { value } }) => {\r\n    try {\r\n      setSourceText(key.decrypt(value, 'utf8'));\r\n      setIsVisibleError(false);\r\n    } catch (e) {\r\n      setIsVisibleError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='App'>\r\n      <div>\r\n        <div className='input-small '>\r\n          <span>Приватний ключ</span>\r\n          <textarea\r\n            className='private'\r\n            value={key.exportKey('private')}\r\n            disabled\r\n          />\r\n        </div>\r\n        <div className='input-small '>\r\n          <span>Публічний ключ</span>\r\n          <textarea\r\n            className='public'\r\n            value={key.exportKey('public')}\r\n            disabled\r\n          />\r\n        </div>\r\n        <div className='input'>\r\n          <span>Розшифрований текст</span>\r\n          <input type='text' onChange={handleDecryptInput} value={sourceText} />\r\n        </div>\r\n        <div className='input'>\r\n          <span>Зашифрований текст</span>\r\n          <textarea\r\n            onChange={handleEncryptInput}\r\n            value={key.encrypt(sourceText, 'base64')}\r\n          />\r\n        </div>\r\n        {isVisibleError ? (\r\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n            <i>Некоректний ключ</i>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}